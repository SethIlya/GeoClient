"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os, platform
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-edfnjl$0_tlvmmy&wse5$37&ff-=-7w7218s^q!lfh_adpivd-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',  # Должен быть до 'django.contrib.admin' и ваших приложений
    'rest_framework',
    'rest_framework_gis',
    'geoclient',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'), # Ваша общая папка шаблонов проекта
            os.path.join(BASE_DIR, 'geoclient', 'templates'), # <--- ДОБАВЬТЕ ЭТУ СТРОКУ ДЛЯ ТЕСТА
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'Praktika',  # Замените на имя вашей БД
        'USER': 'postgres',      # Замените на пользователя БД
        'PASSWORD': '12345', # Замените на пароль
        'HOST': 'localhost',          # или IP адрес вашего сервера БД
        'PORT': '5433',               # Стандартный порт PostgreSQL
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'mediafiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# app/settings.py
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'geoclient', 'static', 'geoclient', 'vue_dist'),
]
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CORS_ALLOW_ALL_ORIGINS = True


# Проверяем, работаем ли на Windows
if platform.system() == 'Windows':

    CONDA_BIN_PATH = 'C:/Users/iimin/miniconda3/Library/bin'

    # Проверяем, существует ли указанная папка перед использованием
    if os.path.exists(CONDA_BIN_PATH):
        # Добавляем папку с бинарниками в системную переменную PATH.
        # Это первый и часто достаточный способ для GeoDjango найти библиотеки.
        os.environ['PATH'] = CONDA_BIN_PATH + os.pathsep + os.environ.get('PATH', '')



        GDAL_LIBRARY_PATH = os.path.join(CONDA_BIN_PATH, 'gdal.dll') # <-- Укажите реальное имя файла GDAL

        # Возможно, также потребуется явно указать путь к GEOS, если возникнет ошибка по GEOS:
        # GEOS_LIBRARY_PATH = os.path.join(CONDA_BIN_PATH, 'geos_c.dll') # <-- Укажите реальное имя файла GEOS
