# Generated by Django 5.2.4 on 2025-07-07 06:25

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('geoclient', '0008_alter_point_antenna_height_alter_point_created_at_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='uploadedrinexfile',
            name='file_hash',
            field=models.CharField(blank=True, db_index=True, help_text='Хэш-сумма SHA-256 содержимого файла для определения дубликатов.', max_length=64, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='GeodeticPoint',
            fields=[
                ('id', models.CharField(help_text='Уникальный ID пункта (Marker Name из RINEX)', max_length=50, primary_key=True, serialize=False, verbose_name='ID пункта')),
                ('station_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Присвоенное имя станции')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Актуальное местоположение')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('point_type', models.CharField(choices=[('ggs', 'Пункты гос. геодезической сети'), ('ggs_kurgan', 'Пункты ГГС на курганах'), ('survey', 'Точки съемочной сети'), ('survey_kurgan', 'Точки съемочной сети на курганах'), ('astro', 'Астрономические пункты'), ('leveling', 'Нивелирные марки/реперы'), ('default', 'Неопределенный тип')], default='default', max_length=20, verbose_name='Тип точки')),
                ('network_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='Класс сети')),
                ('index_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Индекс (номенклатура)')),
                ('center_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип центра')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Статус')),
                ('mark_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер марки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
            ],
            options={
                'verbose_name': 'Геодезический пункт',
                'verbose_name_plural': 'Геодезические пункты',
                'ordering': ['id'],
                'indexes': [models.Index(fields=['location'], name='geopoint_location_idx')],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Местоположение наблюдения')),
                ('timestamp', models.DateTimeField(verbose_name='Время наблюдения (первого)')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность наблюдения')),
                ('raw_x', models.FloatField(blank=True, help_text='Исходная координата X (ECEF из RINEX)', null=True)),
                ('raw_y', models.FloatField(blank=True, help_text='Исходная координата Y (ECEF из RINEX)', null=True)),
                ('raw_z', models.FloatField(blank=True, help_text='Исходная координата Z (ECEF из RINEX)', null=True)),
                ('receiver_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер приемника')),
                ('antenna_height', models.FloatField(blank=True, help_text='Высота антенны (H) из RINEX', null=True, verbose_name='Высота антенны (H)')),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='geoclient.geodeticpoint', verbose_name='Геодезический пункт')),
                ('source_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observations', to='geoclient.uploadedrinexfile', verbose_name='Исходный RINEX файл')),
            ],
            options={
                'verbose_name': 'Наблюдение',
                'verbose_name_plural': 'Наблюдения',
                'ordering': ['-timestamp'],
                'unique_together': {('point', 'timestamp')},
            },
        ),
        migrations.DeleteModel(
            name='Point',
        ),
    ]
